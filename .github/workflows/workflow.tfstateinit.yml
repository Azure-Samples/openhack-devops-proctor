name: 'tfstate-init'

on:
  # push:
  #   branches:
  #   - main
  # pull_request:
  workflow_dispatch:

jobs:
  terraform:
    name: 'tfstate-init'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: provision-team/terraform-state-gh

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Download TF State from Artifacts
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: TerraformRemoteState
    
    - name: Download TF State from Artifacts
      uses: aochmann/actions-download-artifact@1.0.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        name: TerraformRemoteState
        latest: true
        path: provision-team/terraform-state-gh
#         repo: ${{github.repository}}

    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login Azure
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
        export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
        export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
        export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

        az login --service-principal -u "${ARM_CLIENT_ID}" -p "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
        az account set -s "${ARM_SUBSCRIPTION_ID}"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: |
        export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
        export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
        export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
        export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

        IFS='/'
        read -a strarr <<< "${GITHUB_REPOSITORY}"
        export GITHUB_OWNER=${strarr[0]}
        export GH_REPO_NAME=${strarr[1]}
        
        terraform plan -var="gh_repo_name=${GH_REPO_NAME}"
        # -out="provision-team/terraform-state-gh/terraform.tfplan"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Terraform Apply
      # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
        export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
        export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
        export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

        IFS='/'
        read -a strarr <<< "${GITHUB_REPOSITORY}"
        export GITHUB_OWNER=${strarr[0]}
        export GH_REPO_NAME=${strarr[1]}
        
        terraform apply -auto-approve -var="gh_repo_name=${GH_REPO_NAME}"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Publish TF State to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: TerraformRemoteState
        path: |
         provision-team/terraform-state-gh/terraform.tfplan
